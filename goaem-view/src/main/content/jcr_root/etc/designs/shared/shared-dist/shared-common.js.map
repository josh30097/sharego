{"version":3,"sources":["webpack:///shared-common.js","webpack:///webpack/bootstrap 2caa2861a7d929f255ac","webpack:///./shared-common-components.js","webpack:///../jcr_root/apps/shared/common script.js","webpack:///../jcr_root/apps/shared/common/components/c01-breadcrumbs/clientlib/script.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","requireAll","requireContext","keys","map","webpackContext","req","webpackContextResolve","Error","./components/c01-breadcrumbs/clientlib/script.js","Object","resolve","Breadcrumbs","breadcrumbs","this","container","containerStyle","window","getComputedStyle","containerPadding","parseInt","paddingLeft","replace","paddingRight","crumbs","children","i","length","width","offsetWidth","style","display","ellipses","document","createElement","textContent","insertBefore","refreshCrumbs","prototype","containerWidth","clientWidth","totalWidth","breadcrumbItems","$","onresize","event"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAAUI,EAAQD,EAASH,GE3CjC,QAAAW,GAAAC,GACA,MAAAA,GAAAC,OAAAC,IAAAF,GAGAD,EAAAX,EAAA,KFmDM,SAAUI,EAAQD,KAMlB,SAAUC,EAAQD,EAASH,GG3DjC,QAAAe,GAAAC,GACA,MAAAhB,GAAAiB,EAAAD,IAEA,QAAAC,GAAAD,GACA,MAAAF,GAAAE,IAAA,WAAiC,SAAAE,OAAA,uBAAAF,EAAA,SAPjC,GAAAF,IACAK,mDAAA,EAQAJ,GAAAF,KAAA,WACA,MAAAO,QAAAP,KAAAC,IAEAC,EAAAM,QAAAJ,EACAb,EAAAD,QAAAY,EACAA,EAAAV,GAAA,GHqEM,SAAUD,EAAQD,EAASH,GInFjCA,EAAA,GASAsB,YAAA,SAAAC,GAEAC,KAAAC,UAAAF,EAAA,EAEA,IAAAG,GAAAC,OAAAC,iBAAAJ,KAAAC,UACAD,MAAAK,iBAAAC,SAAAJ,EAAAK,YAAAC,QAAA,UAAAF,SAAAJ,EAAAO,aAAAD,QAAA,UAGAR,KAAAU,OAAAX,EAAAY,SAAA,KAEA,QAAAC,GAAA,EAAkBA,EAAAZ,KAAAU,OAAAG,OAAwBD,IAE1CZ,KAAAU,OAAAE,GAAAE,MAAAd,KAAAU,OAAAE,GAAAG,YAEAH,GAAAZ,KAAAU,OAAAG,OAAA,IACAb,KAAAU,OAAAE,GAAAI,MAAAC,QAAA,OAIAjB,MAAAkB,SAAAC,SAAAC,cAAA,MACApB,KAAAkB,SAAAG,YAAA,MAGArB,KAAAC,UAAAqB,aAAAtB,KAAAkB,SAAAlB,KAAAU,OAAA,IACAV,KAAAkB,SAAAJ,MAAAd,KAAAkB,SAAAH,YACAf,KAAAkB,SAAAF,MAAAC,QAAA,OAEAjB,KAAAuB,iBAGAzB,YAAA0B,UAAAD,cAAA,WAEA,GAAAvB,KAAAU,OAAAG,OAAA,GAGA,GAAAY,GAAAzB,KAAAC,UAAAyB,YAAA1B,KAAAK,gBAEAL,MAAAkB,SAAAF,MAAAC,QAAA,MACA,QAAAL,GAAA,EAAsBA,EAAAZ,KAAAU,OAAAG,OAAA,EAA4BD,IAClDZ,KAAAU,OAAAE,GAAAI,MAAAC,QAAA,MAMA,QAFAU,GAAA3B,KAAAU,OAAAV,KAAAU,OAAAG,OAAA,GAAAC,MAEAF,EAAAZ,KAAAU,OAAAG,OAAA,EAA2CD,GAAA,EAAQA,IAAA,CAEnD,KAAAe,EAAA3B,KAAAU,OAAAE,GAAAE,MAAAW,GAKa,CAEbzB,KAAAkB,SAAAF,MAAAC,QAAA,QAEAU,EAAA3B,KAAAkB,SAAAJ,MAAAW,GAEAb,EAAAZ,KAAAU,OAAAG,OAAA,IACAb,KAAAU,OAAAE,EAAA,GAAAI,MAAAC,QAAA,OAEA,OAZAU,GAAA3B,KAAAU,OAAAE,GAAAE,MAEAd,KAAAU,OAAAE,GAAAI,MAAAC,QAAA,UAiBA,IAEAlB,GAFA6B,EAAAC,EAAA,iBAIAD,MAAAf,OAAA,IAEAd,EAAA,GAAAD,aAAA8B,IAGAzB,OAAA2B,SAAA,SAAAC,GAEAhC,GACAA,EAAAwB","file":"shared-common.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// loop through all component folders in shared/common/components\n\tfunction requireAll(requireContext) {\n\t    return requireContext.keys().map(requireContext);\n\t}\n\t\n\trequireAll(__webpack_require__(2));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./components/c01-breadcrumbs/clientlib/script.js\": 3\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 2;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t\n\t/**\n\t *\n\t *  C15 Breadcrumbs\n\t *\n\t *  Formats the breadcrumbs to prevent line breaks.\n\t */\n\t\n\tBreadcrumbs = function(breadcrumbs) {\n\t    //The crumb's ul parent element\n\t    this.container = breadcrumbs[0];\n\t    //Gets the padding inside the container so the effective container width is accurate\n\t    var containerStyle = window.getComputedStyle(this.container);\n\t    this.containerPadding =  parseInt(containerStyle.paddingLeft.replace(\"px\",\"\")) + parseInt(containerStyle.paddingRight.replace(\"px\",\"\"))\n\t    \n\t    //The list of li crumb elements\n\t    this.crumbs = breadcrumbs.children(\"li\");\n\t    //Loop through all of the li crumb elements\n\t    for(var i = 0; i < this.crumbs.length; i++) {\n\t        //Save the displayed crumb width as an independent variable\n\t        this.crumbs[i].width = this.crumbs[i].offsetWidth;\n\t        //Hide the crumb if it's not the last.\n\t        if(i != (this.crumbs.length - 1))\n\t            this.crumbs[i].style.display = 'none';\n\t    }\n\t\n\t    //Create the ellipses element and set it's content\n\t    this.ellipses = document.createElement('li');\n\t    this.ellipses.textContent = \"...\";\n\t\n\t    //Append the ellipses element to the DOM, save it's width, and hide it\n\t    this.container.insertBefore(this.ellipses, this.crumbs[0]);\n\t    this.ellipses.width = this.ellipses.offsetWidth;\n\t    this.ellipses.style.display = 'none';\n\t\n\t    this.refreshCrumbs();\n\t};\n\t\n\tBreadcrumbs.prototype.refreshCrumbs = function() {\n\t    //If there are more than a single crumb\n\t    if(this.crumbs.length > 1) {\n\t\n\t        //Calculate the effective breadcrumb container width\n\t        var containerWidth = this.container.clientWidth - this.containerPadding;\n\t        //Hide all but the last crumb\n\t        this.ellipses.style.display = 'none';\n\t        for(var i = 0; i < this.crumbs.length - 1; i++) {\n\t            this.crumbs[i].style.display = 'none';\n\t        }\n\t\n\t        //Instantiate total visible width with last crumb length\n\t        var totalWidth = this.crumbs[this.crumbs.length - 1].width;\n\t        //For each crumb but the last\n\t        for(var i = this.crumbs.length - 2; i >= 0; i--) {\n\t            //If current crumb width doesn't exceed the container width\n\t            if((totalWidth + this.crumbs[i].width) < containerWidth) {\n\t                //Add current crumb width to total visible width\n\t                totalWidth += this.crumbs[i].width;\n\t                //Make current crumb visible\n\t                this.crumbs[i].style.display = 'block';\n\t            } else {\n\t                //Make ellipses visible\n\t                this.ellipses.style.display = 'block';\n\t                //If the ellipses width makes the total width exceed the container width\n\t                if((totalWidth + this.ellipses.width) > containerWidth) {\n\t                    //If there is a previously added intermediary crumb to hide then hide the crumb.\n\t                    if(i < this.crumbs.length - 2)\n\t                        this.crumbs[i + 1].style.display = 'none';\n\t                }\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t//The breadcrumb's crumb container element\n\tvar breadcrumbItems = $(\"ul.breadcrumbs\");\n\t//The breadcrumb's script object\n\tvar breadcrumbs;\n\t//If the breadcrumb container exists\n\tif(breadcrumbItems && breadcrumbItems.length > 0) {\n\t    //Instantiate the breadcrumb object using the container element\n\t    breadcrumbs = new Breadcrumbs(breadcrumbItems);\n\t}\n\t\n\twindow.onresize = function(event) {\n\t    //If the window has been resized and the breadcrumb exists then redetermine what crumbs to show\n\t    if(breadcrumbs)\n\t        breadcrumbs.refreshCrumbs();\n\t};\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// shared-common.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2caa2861a7d929f255ac","// loop through all component folders in shared/common/components\nfunction requireAll(requireContext) {\n    return requireContext.keys().map(requireContext);\n}\n\nrequireAll(require.context('./../jcr_root/apps/shared/common', true, /script.js/));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./shared-common-components.js\n// module id = 0\n// module chunks = 0","var map = {\n\t\"./components/c01-breadcrumbs/clientlib/script.js\": 3\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../jcr_root/apps/shared/common script.js\n// module id = 2\n// module chunks = 0","require('./styles.scss');\n\n/**\n *\n *  C15 Breadcrumbs\n *\n *  Formats the breadcrumbs to prevent line breaks.\n */\n\nBreadcrumbs = function(breadcrumbs) {\n    //The crumb's ul parent element\n    this.container = breadcrumbs[0];\n    //Gets the padding inside the container so the effective container width is accurate\n    var containerStyle = window.getComputedStyle(this.container);\n    this.containerPadding =  parseInt(containerStyle.paddingLeft.replace(\"px\",\"\")) + parseInt(containerStyle.paddingRight.replace(\"px\",\"\"))\n    \n    //The list of li crumb elements\n    this.crumbs = breadcrumbs.children(\"li\");\n    //Loop through all of the li crumb elements\n    for(var i = 0; i < this.crumbs.length; i++) {\n        //Save the displayed crumb width as an independent variable\n        this.crumbs[i].width = this.crumbs[i].offsetWidth;\n        //Hide the crumb if it's not the last.\n        if(i != (this.crumbs.length - 1))\n            this.crumbs[i].style.display = 'none';\n    }\n\n    //Create the ellipses element and set it's content\n    this.ellipses = document.createElement('li');\n    this.ellipses.textContent = \"...\";\n\n    //Append the ellipses element to the DOM, save it's width, and hide it\n    this.container.insertBefore(this.ellipses, this.crumbs[0]);\n    this.ellipses.width = this.ellipses.offsetWidth;\n    this.ellipses.style.display = 'none';\n\n    this.refreshCrumbs();\n};\n\nBreadcrumbs.prototype.refreshCrumbs = function() {\n    //If there are more than a single crumb\n    if(this.crumbs.length > 1) {\n\n        //Calculate the effective breadcrumb container width\n        var containerWidth = this.container.clientWidth - this.containerPadding;\n        //Hide all but the last crumb\n        this.ellipses.style.display = 'none';\n        for(var i = 0; i < this.crumbs.length - 1; i++) {\n            this.crumbs[i].style.display = 'none';\n        }\n\n        //Instantiate total visible width with last crumb length\n        var totalWidth = this.crumbs[this.crumbs.length - 1].width;\n        //For each crumb but the last\n        for(var i = this.crumbs.length - 2; i >= 0; i--) {\n            //If current crumb width doesn't exceed the container width\n            if((totalWidth + this.crumbs[i].width) < containerWidth) {\n                //Add current crumb width to total visible width\n                totalWidth += this.crumbs[i].width;\n                //Make current crumb visible\n                this.crumbs[i].style.display = 'block';\n            } else {\n                //Make ellipses visible\n                this.ellipses.style.display = 'block';\n                //If the ellipses width makes the total width exceed the container width\n                if((totalWidth + this.ellipses.width) > containerWidth) {\n                    //If there is a previously added intermediary crumb to hide then hide the crumb.\n                    if(i < this.crumbs.length - 2)\n                        this.crumbs[i + 1].style.display = 'none';\n                }\n                break;\n            }\n        }\n    }\n};\n\n//The breadcrumb's crumb container element\nvar breadcrumbItems = $(\"ul.breadcrumbs\");\n//The breadcrumb's script object\nvar breadcrumbs;\n//If the breadcrumb container exists\nif(breadcrumbItems && breadcrumbItems.length > 0) {\n    //Instantiate the breadcrumb object using the container element\n    breadcrumbs = new Breadcrumbs(breadcrumbItems);\n}\n\nwindow.onresize = function(event) {\n    //If the window has been resized and the breadcrumb exists then redetermine what crumbs to show\n    if(breadcrumbs)\n        breadcrumbs.refreshCrumbs();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../jcr_root/apps/shared/common/components/c01-breadcrumbs/clientlib/script.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}